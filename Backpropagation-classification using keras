import numpy as np
import pandas as pd

#I am creating my own dataet of cgpa,resume score and then training the neural network using backpropagation

df=pd.DataFrame([[8,8,4],[7,9,5],[6,10,6],[5,12,7]],columns=['cgpa','profile_score','lpa'])

df

import tensorflow
from tensorflow import keras
from keras import Sequential
from keras.layers import Dense

model = Sequential()

model.add(Dense(2,activation='sigmoid',input_dim=2))
model.add(Dense(1,activation='sigmoid'))

model.summary()


model.get_weights()

new_weights=[np.array([[0.1,0.1],[0.1,0.1]],dtype=np.float32),
             np.array([0.,0.],dtype=np.float32),
             np.array([[0.1],[0.1]],dtype=np.float32),
             np.array([0.],dtype=np.float32)]
             
             
             
model.set_weights(new_weights)

model.get_weights()


optimizer=keras.optimizers.Adam(learning_rate=0.001)
model.compile(loss='binary_crossentropy',optimizer=optimizer)


model.fit(df.iloc[:,0:-1].values,df['placed'].values,epochs=75,verbose=1,batch_size=1)

model.get_weights()
